Revising Aggregations - The Count Function
select count(name) from city where population > 100000;
Revising Aggregations - The Sum Function
select sum(population) from city where district = 'California';
Revising Aggregations - Averages
select avg(population) from city where district = 'California';
Average Population
select floor(avg(population)) from city;
Japan Population
select sum(population) from city where countrycode = 'JPN';
Population Density Difference
select max(population) - min(population) from city;
The Blunder
select ceil(avg(salary) - avg(replace(salary,'0',''))) from employees;
ü§îÔ∏èTOP EARNERS

-- select max(salary*months),count(salary*months) 
-- from employee 
-- where (salary*months)=(select max(salary*months) from employee);

-- Select (salary*months) AS MAXSAL, count(salary*months) 
-- from employee 
-- group by MAXSAL 
-- order by MAXSAL desc 
-- LIMIT 1;

Weather Observation Station 2
select round(sum(lat_n),2) , round(sum(long_w),2) from station;
Weather Observation Station 13
select round(sum(lat_n),4) from station where (lat_n > 38.7880) and (lat_n < 137.2345);
Weather Observation Station 14
select round(max(lat_n),4) from station where lat_n < 137.2345;
Weather Observation Station 15
-- SELECT ROUND(LONG_W, 4) FROM STATION WHERE LAT_N < 137.2345 ORDER BY LAT_N DESC LIMIT 1;

-- SELECT ROUND(LONG_W, 4)
-- FROM STATION
-- WHERE LAT_N = (
--     SELECT MAX(LAT_N)
--     FROM STATION
--     WHERE LAT_N < 137.2345
-- ) 

Weather Observation Station 16
select round(min(lat_n),4) from station where lat_n > 38.7780;
Weather Observation Station 17
select round(long_w,4) from station where lat_n = (select min(lat_n) from station where lat_n > 38.7780);
Weather Observation Station 18
select round((abs(min(lat_n) - max(lat_n)) + abs(min(long_w) - max(long_w))),4) from station;
Weather Observation Station 19
select round(sqrt(power((min(long_w) - max(long_w)),2) + power((min(lat_n) - max(lat_n)),2)),4) from station;
ü§îÔ∏èWeather Observation Station 20
	SET @row_index := -1;
	SELECT ROUND(AVG(subq.unit_price), 4) as median FROM (
	    SELECT @row_index:=@row_index + 1 AS row_index, unit_price
	    FROM sales
	    ORDER BY unit_price
	) AS subq
	WHERE subq.row_index IN (FLOOR(@row_index/2), CEIL(@row_index/2));



